@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*@if (SignInManager.IsSignedIn(User))
    {
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
                </li>
                <li>
                    <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
                </li>
            </ul>
        </form>
    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
            <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
        </ul>
    }*@

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="ml-auto">
        <div class="navbar-nav">
            <div class="nav-item">
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="nav-link btn navbar-btn">Hello @UserManager.GetUserName(User)!</a>
            </div>
            <div class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn nav-link">Logout</button>
            </div>
        </div>
    </form>
}
else
{
    <div class="navbar-nav ml-auto">
        <div class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a></div>
        <div class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Log in</a></div>
    </div>

}